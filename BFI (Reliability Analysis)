# Load required libraries
library(psych)
library(ggplot2)
library(boot)

# Ensure data is numeric
bfi_numeric <- as.data.frame(lapply(bfi_numeric, function(x) as.numeric(as.character(x))))

# Reverse-code items
items_to_reverse <- grep("R$", colnames(bfi_numeric), value = TRUE)
max_scale <- 5
bfi_numeric_reversed <- bfi_numeric
for (item in items_to_reverse) {
  bfi_numeric_reversed[[item]] <- max_scale + 1 - bfi_numeric[[item]]
}

# Define personality factors
new_categories <- list(
  Extraversion = c("talkative", "fullenergy", "enthusiastic", "quietR", "shyR", "outgoing"),
  Agreeableness = c("findfaultR", "helpful", "quarrelsR", "forgiving", "trusting", "coldR"),
  Conscientiousness = c("carelessR", "reliable", "disorganizedR", "lazyR", "efficient", "plans"),
  Neuroticism = c("tense", "worries", "emostableR", "moody", "nervous"),
  Openness = c("curious", "imagination", "artistic", "routineR", "nonartisticR", "sophisticated")
)

# Define index subsets for each survey
NORWEGIAN_IDXS <- c(0, 4, 6, 7, 9, 13, 14, 15, 17, 19, 20, 24, 26, 27, 29, 33, 34, 37, 41, 43) + 1
BRAZILIAN_IDXS <- c(0, 1, 4, 7, 9, 11, 14, 16, 17, 18, 20, 21, 28, 30, 31, 33, 34, 36, 38, 41) + 1
SERBIAN_IDXS <- c(0, 2, 4, 7, 10, 11, 14, 15, 18, 20, 21, 22, 27, 29, 30, 32, 34, 35, 38, 41) + 1
OURS_IDXS <- selected_items  # Use the predefined indices for "Ours"

# Extract datasets
norwegian_data <- bfi_numeric_reversed[, NORWEGIAN_IDXS]
brazilian_data <- bfi_numeric_reversed[, BRAZILIAN_IDXS]
serbian_data <- bfi_numeric_reversed[, SERBIAN_IDXS]
ours_data <- bfi_numeric_reversed[, OURS_IDXS]

# Cronbach's alpha function
cronbach_alpha <- function(data) {
  if (!is.data.frame(data) && !is.matrix(data)) stop("Error: Input data must be a data.frame or matrix.")
  if (ncol(data) == 0) stop("Error: Data has no columns.")
  
  constant_columns <- apply(data, 2, function(x) var(x, na.rm = TRUE) == 0)
  if (any(constant_columns)) {
    warning("Constant columns detected and removed:", paste(names(data)[constant_columns], collapse = ", "))
    data <- data[, !constant_columns, drop = FALSE]
  }
  
  if (ncol(data) == 0) stop("Error: All columns were constant. No data to analyze.")
  
  k <- ncol(data)
  variances <- apply(data, 2, var, na.rm = TRUE)
  total_variance <- var(rowSums(data, na.rm = TRUE), na.rm = TRUE)
  alpha <- (k / (k - 1)) * (1 - sum(variances) / total_variance)
  return(alpha)
}

# Bootstrap functions
calc_alpha <- function(data, indices) {
  sampled_data <- data[indices, , drop = FALSE]
  return(cronbach_alpha(sampled_data))
}

bootstrap_alpha <- function(data, B = 1000) {
  results <- boot(data, statistic = calc_alpha, R = B)
  alpha_est <- mean(results$t, na.rm = TRUE)
  alpha_ci <- tryCatch({
    boot.ci(results, type = "perc")$percent[4:5]
  }, error = function(e) c(NA, NA))
  return(c(alpha_est, alpha_ci))
}

# Analyze datasets
survey_results <- data.frame(Factor = character(), Survey = character(), Alpha = numeric(), LowerCI = numeric(), UpperCI = numeric())

for (factor in names(new_categories)) {
  factor_columns <- intersect(colnames(bfi_numeric_reversed), new_categories[[factor]])
  print(paste("Factor:", factor, "- Matching columns:", paste(factor_columns, collapse = ", ")))

  for (survey_name in c("Norwegian", "Brazilian", "Serbian", "Ours")) {
    survey_data <- switch(
      survey_name,
      "Norwegian" = norwegian_data,
      "Brazilian" = brazilian_data,
      "Serbian" = serbian_data,
      "Ours" = ours_data
    )
    factor_columns_survey <- intersect(colnames(survey_data), factor_columns)
    if (length(factor_columns_survey) > 0) {
      factor_data_survey <- survey_data[, factor_columns_survey, drop = FALSE]
      survey_result <- bootstrap_alpha(factor_data_survey)
      survey_results <- rbind(survey_results,
                              data.frame(Factor = factor, Survey = survey_name, Alpha = survey_result[1], LowerCI = survey_result[2], UpperCI = survey_result[3]))
    } else {
      # Add an NA row for missing factors
      survey_results <- rbind(survey_results,
                              data.frame(Factor = factor, Survey = survey_name, Alpha = NA, LowerCI = NA, UpperCI = NA))
    }
  }
}

# Create the plot
ggplot(survey_results, aes(x = Factor, y = Alpha, color = Survey, group = Survey)) +
  geom_point(position = position_dodge(width = 0.4), size = 3, na.rm = TRUE) +
  geom_errorbar(aes(ymin = LowerCI, ymax = UpperCI), position = position_dodge(width = 0.4), width = 0.2, na.rm = TRUE) +
  labs(
    title = "Reliability of Shortened BFI Surveys",
    y = "Coefficient Î±",
    x = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.title = element_blank()
  )
