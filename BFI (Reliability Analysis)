# Load required libraries
library(psych)   # For Cronbach's alpha
library(ggplot2) # For plotting
library(boot)    # For bootstrap confidence intervals

# Ensure data is numeric
bfi_numeric <- as.data.frame(lapply(bfi_numeric, function(x) as.numeric(as.character(x))))

# Identify items with "R" in their names
items_to_reverse <- grep("R$", colnames(bfi_numeric), value = TRUE)

# Reverse-code these items in the dataset
max_scale <- 5  # Adjust based on the Likert scale
bfi_numeric_reversed <- bfi_numeric
for (item in items_to_reverse) {
  bfi_numeric_reversed[[item]] <- max_scale + 1 - bfi_numeric[[item]]
}

# Define personality factors
new_categories <- list(
  Extraversion = c("talkative", "fullenergy", "enthusiastic", "quietR", "shyR", "outgoing"),
  Agreeableness = c("findfaultR", "helpful", "quarrelsR", "forgiving", "trusting", "coldR"),
  Conscientiousness = c("carelessR", "reliable", "disorganizedR", "lazyR", "efficient", "plans"),
  Neuroticism = c("tense", "worries", "emostableR", "moody", "nervous"),
  Openness = c("curious", "imagination", "artistic", "routineR", "nonartisticR", "sophisticated")
)

# Extract dataset subsets based on indices
NORWEGIAN_IDXS <- c(0, 4, 6, 7, 9, 13, 14, 15, 17, 19, 20, 24, 26, 27, 29, 33, 34, 37, 41, 43) + 1
BRAZILIAN_IDXS <- c(0, 1, 4, 7, 9, 11, 14, 16, 17, 18, 20, 21, 28, 30, 31, 33, 34, 36, 38, 41) + 1
SERBIAN_IDXS <- c(0, 2, 4, 7, 10, 11, 14, 15, 18, 20, 21, 22, 27, 29, 30, 32, 34, 35, 38, 41) + 1

norwegian_data <- bfi_numeric_reversed[, NORWEGIAN_IDXS]
brazilian_data <- bfi_numeric_reversed[, BRAZILIAN_IDXS]
serbian_data <- bfi_numeric_reversed[, SERBIAN_IDXS]

# Function to calculate Cronbach's alpha manually
cronbach_alpha <- function(data) {
  k <- ncol(data)  # Number of items
  variances <- apply(data, 2, var, na.rm = TRUE)  # Variance of each item
  total_variance <- var(rowSums(data, na.rm = TRUE), na.rm = TRUE)  # Total variance
  alpha <- (k / (k - 1)) * (1 - sum(variances) / total_variance)  # Cronbach's alpha formula
  return(alpha)
}

# Function for bootstrap-based alpha calculation
calc_alpha <- function(data, indices) {
  sampled_data <- data[indices, ]
  return(cronbach_alpha(sampled_data))
}

# Perform bootstrap to calculate alpha and 95% confidence intervals
bootstrap_alpha <- function(data, B = 1000) {
  results <- boot(data, statistic = calc_alpha, R = B)
  alpha_est <- mean(results$t, na.rm = TRUE)
  alpha_ci <- tryCatch({
    boot.ci(results, type = "perc")$percent[4:5]
  }, error = function(e) {
    c(NA, NA)  # Return NA if confidence interval calculation fails
  })
  return(c(alpha_est, alpha_ci))
}

# Calculate Cronbach's alpha for each personality factor
factor_results <- data.frame(Factor = character(), Alpha = numeric(), LowerCI = numeric(), UpperCI = numeric())
for (factor in names(new_categories)) {
  factor_data <- bfi_numeric_reversed[, new_categories[[factor]], drop = FALSE]
  result <- bootstrap_alpha(factor_data)
  factor_results <- rbind(factor_results, 
                          data.frame(Factor = factor, Alpha = result[1], LowerCI = result[2], UpperCI = result[3]))
}

# Use manual Cronbach's alpha for Norwegian, Brazilian, and Serbian datasets
norwegian_alpha <- cronbach_alpha(norwegian_data)
brazilian_alpha <- cronbach_alpha(brazilian_data)
serbian_alpha <- cronbach_alpha(serbian_data)

comparison_data <- data.frame(
  Factor = rep(c("Extraversion", "Agreeableness", "Conscientiousness", "Neuroticism", "Openness"), 3),
  Survey = rep(c("Norwegian", "Brazilian", "Serbian"), each = 5),
  Alpha = c(
    norwegian_alpha, 
    brazilian_alpha, 
    serbian_alpha
  ),
  LowerCI = NA,
  UpperCI = NA
)

# Add your survey results to the comparison data
our_results <- data.frame(
  Factor = factor_results$Factor,
  Survey = rep("Ours", nrow(factor_results)),
  Alpha = factor_results$Alpha,
  LowerCI = factor_results$LowerCI,
  UpperCI = factor_results$UpperCI
)

# Combine all results
final_data <- rbind(comparison_data, our_results)

# Ensure the Survey column is a factor
final_data$Survey <- as.factor(final_data$Survey)

# Create the plot
ggplot(final_data, aes(x = Factor, y = Alpha, color = Survey)) +
  geom_point(position = position_dodge(width = 0.4), size = 3) +
  geom_errorbar(aes(ymin = LowerCI, ymax = UpperCI), position = position_dodge(width = 0.4), width = 0.2) +
  labs(
    title = "Reliability of Shortened BFI Surveys",
    y = "Coefficient Î±",
    x = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.title = element_blank()
  )
