# Extract the reduced survey questions using the selected indices
reduced_survey <- bfi_numeric[, selected_items]

# View the reduced survey dataset
head(reduced_survey)

# Optional: Save the reduced survey to a CSV file
write.csv(reduced_survey, "reduced_survey.csv", row.names = FALSE)

# Load necessary libraries
library(boot)
library(ggplot2)

# Load the reduced survey dataset
file_path <- "C:/Users/doubl/Desktop/reduced_survey.csv"
reduced_survey <- read.csv(file_path, na.strings = c("NA", ""))

# Extract column indices based on the first letter of column names
selected_subsets <- list(
  Extraversion = grep("^E", names(reduced_survey)),
  Agreeableness = grep("^A", names(reduced_survey)),
  Conscientiousness = grep("^C", names(reduced_survey)),
  Neuroticism = grep("^N", names(reduced_survey)),
  Openness = grep("^O", names(reduced_survey))
)

# Define Cronbach's alpha function
compute_cronbach_alpha <- function(data_subset) {
  data_subset <- data_subset[rowSums(!is.na(data_subset)) > 0, ]  # Remove rows with all missing values
  p <- ncol(data_subset)
  if (p < 2 || nrow(data_subset) == 0) return(NA)  # Alpha is undefined for invalid subsets
  item_var <- apply(data_subset, 2, var, na.rm = TRUE)
  if (all(item_var == 0, na.rm = TRUE)) return(NA)  # Skip subsets with zero variance
  total_var <- var(rowSums(data_subset, na.rm = TRUE), na.rm = TRUE)
  if (is.na(total_var) || total_var == 0) return(NA)  # Skip subsets with zero total variance
  alpha <- p / (p - 1) * (1 - sum(item_var, na.rm = TRUE) / total_var)
  if (is.nan(alpha) || alpha < 0) alpha <- 0
  if (alpha > 1) alpha <- 1
  return(alpha)
}

# Bootstrap reliability for each trait
bootstrap_alpha <- function(data, indices, subset_indices) {
  data_resampled <- data[indices, , drop = FALSE]
  data_subset <- data_resampled[, subset_indices, drop = FALSE]
  return(compute_cronbach_alpha(data_subset))
}

# Initialize lists for results and valid traits
bootstrap_results <- list()
valid_traits <- c()  # To track traits with valid results

# Loop through each subset
for (i in seq_along(selected_subsets)) {
  subset_indices <- selected_subsets[[i]]
  
  # Check if the subset has sufficient data
  subset_data <- reduced_survey[, subset_indices, drop = FALSE]
  if (ncol(subset_data) < 2 || all(is.na(subset_data))) {
    cat("Skipping trait:", names(selected_subsets)[i], "- insufficient data\n")
    next
  }
  
  # Perform bootstrapping
  boot_result <- boot(data = reduced_survey, statistic = bootstrap_alpha, R = 1000, subset_indices = subset_indices)
  ci_result <- tryCatch(
    boot.ci(boot_result, type = "bca"),
    error = function(e) NULL  # Return NULL on error
  )
  
  # Check if the result is valid
  if (!is.null(ci_result) && is.list(ci_result) && !is.null(ci_result$t0)) {
    valid_traits <- c(valid_traits, names(selected_subsets)[i])  # Append valid trait name
    bootstrap_results[[length(valid_traits)]] <- ci_result  # Store only valid results
  }
}

# Filter bootstrap_results to ensure all are lists
bootstrap_results <- bootstrap_results[!sapply(bootstrap_results, is.null)]

# Create the results data frame
results <- data.frame(
  Trait = valid_traits,
  Alpha = sapply(bootstrap_results, function(res) res$t0),  # Extract Cronbach's alpha
  Lower = sapply(bootstrap_results, function(res) if (!is.null(res$bca)) res$bca[4] else NA),  # Extract lower bound of CI
  Upper = sapply(bootstrap_results, function(res) if (!is.null(res$bca)) res$bca[5] else NA)   # Extract upper bound of CI
)

# Print summarized results
print(results)

# Visualize reliability results
ggplot(results, aes(x = Trait, y = Alpha)) +
  geom_point(color = "blue", size = 3) +
  geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.2, color = "blue") +
  labs(
    title = "Reliability Analysis of Reduced Survey",
    y = "Cronbach's Alpha",
    x = "Personality Traits"
  ) +
  theme_minimal()
